@using DnDTomeOfKeeping.Models;
@{
	ViewBag.Title = "CharacterEdit";

	Character temp = new Character();
	temp.Proficiencies = ViewBag.CharacterData.Proficiencies;
	temp.SpellsKnown = ViewBag.CharacterData.SpellsKnown;
	string[] classNames = new string[] { "Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Warlock", "Wizard" };
	string[] raceNames = new string[] { "Dwarf", "Elf", "Halfling", "Human", "Dragonborn", "Gnome", "Half-Elf", "Half-Orc", "Tiefling" };
}

<script>
	function levelup(level, currenthp) {
		if (level < 20) {
			hproll = 0;
			hp = document.getElementById('characterhp');
			con = document.getElementById('constitution');
			conmodifier = Math.floor(con.value / 2) - 5;
			lvl = document.getElementById('level');
			random = Math.ceil(math.random() * @ViewBag.HitDieSize );
			hproll += random;
			if (conmodifier < -3) {
				hp.value = currenthp + hproll;
			} else {
				hp.value = currenthp + hproll + conmodifier;
			}
			lvl.value = level + 1;
			document.getElementById('editform').submit();
		} else {
			return ('This character is already at maximum level!');
		}
	}

	function rollhp(level) {
		total = 0;
		hp = document.getElementById('characterhp');
		con = document.getElementById('constitution');
		conmodifier = Math.floor(con.value / 2) - 5;

		timestoroll = level - 1;
		dicetoroll = @ViewBag.HitDieSize + 0;
		for (i = 0; i < timestoroll; i++) {
			random = Math.ceil(Math.random() * dicetoroll);
			total += random;
		}
		if (conmodifier == -5) {
			hp.value = total + @ViewBag.HitDieSize + 0 + (conmodifier * (level - 1));
		} else {
			hp.value = total + @ViewBag.HitDieSize + conmodifier + (conmodifier * (level - 1));
		}
	}
</script>

<h2>CharacterEdit</h2>



<label>Character Name: </label> <input type="text" value="@ViewBag.CharacterData.CharName" placeholder="@ViewBag.CharacterData.CharName" /> <br />
<label>Race: </label>@raceNames[@ViewBag.CharacterData.Race - 1]  <br />
<label>Class: </label> @classNames[@ViewBag.CharacterData.Class - 1]  <br />

<form action="/Home/SaveChanges" method="post" id="editform">
	<input type="hidden" name="Class" value=" @ViewBag.CharacterData.Class" />
	<label>Level: </label>
	<select name="CharLevel" id="level">
		@for (int i = 1; i <= 20; i++)
		{
			if (i == @ViewBag.CharacterData.CharLevel)
			{
				<option value=@i selected> @i </option>
			}
			else
			{
				<option value=@i> @i </option>
			}
		}
	</select><br />
	<button type="button" onclick="levelup(level.value, characterhp.value)">Level up!</button>
	<br />
	<input type="hidden" name="CharID" value="@ViewBag.CharacterData.CharID" />
	<label>Maximum Hit Points: </label>
	<input type="number" name="HitPoints" value="@ViewBag.CharacterData.HitPoints" id="characterhp" /> <button type="button" id="roll" onclick="rollhp(level.value)">Roll HP</button>
	<br />
	<label>Alignment: </label>
	<select name="Alignment">
		@if ("Lawful Good" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Lawful Good" selected> Lawful Good </option>
		}
		else
		{
			<option value="Lawful Good"> Lawful Good </option>
		}
		@if ("Lawful Neutral" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Lawful Neutral" selected> Lawful Neutral </option>
		}
		else
		{
			<option value="Lawful Neutral"> Lawful Neutral </option>
		}
		@if ("Lawful Evil" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Lawful Evil" selected> Lawful Evil </option>
		}
		else
		{
			<option value="Lawful Evil"> Lawful Evil </option>
		}
		@if ("Neutral Good" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Neutral Good" selected> Neutral Good </option>
		}
		else
		{
			<option value="Neutral Good"> Neutral Good </option>
		}
		@if ("True Neutral" == @ViewBag.CharacterData.Alignment)
		{
			<option value="True Neutral" selected> True Neutral </option>
		}
		else
		{
			<option value="True Neutral"> True Neutral </option>
		}
		@if ("Neutral Evil" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Neutral Evil" selected> Neutral Evil </option>
		}
		else
		{
			<option value="Neutral Evil"> Neutral Evil </option>
		}
		@if ("Chaotic Good" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Chaotic Good" selected> Chaotic Good </option>
		}
		else
		{
			<option value="Chaotic Good"> Chaotic Good </option>
		}
		@if ("Chaotic Neutral" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Chaotic Neutral" selected> Chaotic Neutral </option>
		}
		else
		{
			<option value="Chaotic Neutral"> Chaotic Neutral </option>
		}
		@if ("Chaotic Evil" == @ViewBag.CharacterData.Alignment)
		{
			<option value="Chaotic Evil" selected> Chaotic Evil </option>
		}
		else
		{
			<option value="Chaotic Evil"> Chaotic Evil </option>
		}
	</select>
	<br />
	<label>STR: </label>
	<input name="Strength" type="number" minimum="3" value="@ViewBag.CharacterData.Strength" />
	<br />
	<label>DEX: </label>
	<input name="Dexterity" type="number" minimum="3" value="@ViewBag.CharacterData.Dexterity" />
	<br />
	<label>CON: </label>
	<input name="Constitution" type="number" minimum="3" value="@ViewBag.CharacterData.Constitution" id="constitution" />
	<br />
	<label>INT: </label>
	<input name="Intelligence" type="number" minimum="3" value="@ViewBag.CharacterData.Intelligence" />
	<br />
	<label>WIS: </label>
	<input name="Wisdom" type="number" minimum="3" value="@ViewBag.CharacterData.Wisdom" />
	<br />
	<label>CHA:</label>
	<input name="Charisma" type="number" minimum="3" value="@ViewBag.CharacterData.Charisma" />
	<br />
	<label>Current Spells: </label>@ViewBag.CharacterData.SpellsKnown
	<label>Add Spells:</label>
	<table border="1">
		@for (int i = 0; i < ViewBag.Spells.Count; i++)
		{
			<tr>
				<td>
					@if (temp.SpellsKnown.Contains($"{ViewBag.Spells[i]["name"]}"))
					{
						<input type="checkbox" name="SpellsKnown" value="@ViewBag.Spells[i]["name"]" checked />
						@ViewBag.Spells[i]["name"]
					}
					else
					{
						<input type="checkbox" name="SpellsKnown" value="@ViewBag.Spells[i]["name"]" />
						@ViewBag.Spells[i]["name"]
					}
				</td>
			</tr>
		}
	</table>
	<label>Current Proficiencies: </label>@ViewBag.CharacterData.Proficiencies
	<br />
	<label>Change Proficiencies: </label>
	<br />
	@for (int i = 0; i < ViewBag.Classes["from"].Count; i++)
	{
		if (temp.Proficiencies.Contains($"{ViewBag.Classes["from"][i]["name"]}"))
		{
			<input type="checkbox" name="Proficiencies" value="@ViewBag.Classes["from"][i]["name"]" checked />
			@ViewBag.Classes["from"][i]["name"]
			<br />
		}
		else
		{
			<input type="checkbox" name="Proficiencies" value="@ViewBag.Classes["from"][i]["name"]" />
			@ViewBag.Classes["from"][i]["name"]
			<br />
		}
	}
	@for (int i = 0; i < ViewBag.Pro.Count; i++)
	{
		<input type="hidden" name="Proficiencies" value="@ViewBag.Pro[i]["name"]" />
	}

	@for (int i = 0; i < ViewBag.Saves.Count; i++)
	{
		<input type="hidden" name="Proficiencies" value="@ViewBag.Saves[i]["name"]" />
	}
	<input type="submit" value="Save Changes" />
</form>
<br />
<br />
<br />

