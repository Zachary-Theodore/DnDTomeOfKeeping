@using DnDTomeOfKeeping.Models;
@{
    ViewBag.Title = "CharacterEdit";

    Character temp = new Character();
    temp.Proficiencies = ViewBag.CharacterData.Proficiencies;
    temp.SpellsKnown = ViewBag.CharacterData.SpellsKnown;
    string[] classNames = new string[] { "Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Warlock", "Wizard" };
}

<h2>CharacterEdit</h2>



<label>Character Name: </label> @ViewBag.CharacterData.CharName  <br />
<label>Race: </label> @ViewBag.CharacterData.Race  <br />
<label>Class: </label> @classNames[@ViewBag.CharacterData.Class-1]  <br />

<form action="/Home/SaveChanges" method="post">
    <input type="hidden" name="Class" value=" @ViewBag.CharacterData.Class" />
    <label>Current Level: </label> @ViewBag.CharacterData.CharLevel

    <label>New Level: </label>
    <select name="CharLevel">
        @for (int i = 1; i <= 20; i++)
        {
            if (i == @ViewBag.CharacterData.CharLevel)
            {
                <option value=@i selected> @i </option>
            }
            else
            {
                <option value=@i> @i </option>
            }
        }
    </select><br />

    <br />
    <input type="hidden" name="CharID" value="@ViewBag.CharacterData.CharID" />
    <label>Current HP: </label> @ViewBag.CharacterData.HitPoints
    <label>New HP: </label>
    <input type="number" name="HitPoints" value="@ViewBag.CharacterData.HitPoints" />
    <br />
    <label> Current Alignment: </label> @ViewBag.CharacterData.Alignment
    <label>New Alignment: </label>
    <select name="Alignment">
        <option value="Lawful Good">Lawful Good</option>
        <option value="Lawful Neutral">Lawful Neutral</option>
        <option value="Lawful Evil">Lawful Evil</option>
        <option value="Neutral Good">Neutral Good</option>
        <option value="True Neutral">True Neutral</option>
        <option value="Neutral Evil">Neutral Evil</option>
        <option value="Chaotic Good"> Chaotic Good</option>
        <option value="Chaotic Neutral"> Chaotic Neutral</option>
        <option value="Chaotic Evil"> Chaotic Evil</option>
    </select>
    <br />
    <label>Current STR: </label> @ViewBag.CharacterData.Strength
    <label>New STR: </label>
    <input name="Strength" type="number" minimum="3" value="@ViewBag.CharacterData.Strength" />
    <br />
    <label>Current DEX: </label> @ViewBag.CharacterData.Dexterity
    <label>New DEX: </label>
    <input name="Dexterity" type="number" minimum="3" value="@ViewBag.CharacterData.Dexterity" />
    <br />
    <label>Current CON: </label> @ViewBag.CharacterData.Constitution
    <label>New CON: </label>
    <input name="Constitution" type="number" minimum="3" value="@ViewBag.CharacterData.Constitution" id="con" />
    <br />
    <label>Current INT: </label> @ViewBag.CharacterData.Intelligence
    <label>New INT: </label>
    <input name="Intelligence" type="number" minimum="3" value="@ViewBag.CharacterData.Intelligence" />
    <br />
    <label>Current WIS: </label> @ViewBag.CharacterData.Wisdom
    <label>New WIS: </label>
    <input name="Wisdom" type="number" minimum="3" value="@ViewBag.CharacterData.Wisdom" />
    <br />
    <label>Current CHA: </label> @ViewBag.CharacterData.Charisma
    <label>New CHA:</label>
    <input name="Charisma" type="number" minimum="3" value="@ViewBag.CharacterData.Charisma" />
    <br />
    <label>Current Spells: </label>@ViewBag.CharacterData.SpellsKnown
    <label>Add Spells:</label>
    <table border="1">
        @for (int i = 0; i < ViewBag.Spells.Count; i++)
        {
            <tr>
				<td>
					@if (temp.SpellsKnown.Contains($"{ViewBag.Spells[i]["name"]}"))
					{
						<input type="checkbox" name="SpellsKnown" value="@ViewBag.Spells[i]["name"]" checked />
						@ViewBag.Spells[i]["name"]
					}
					else
					{
						<input type="checkbox" name="SpellsKnown" value="@ViewBag.Spells[i]["name"]" />
						@ViewBag.Spells[i]["name"]
					}
				</td>
            </tr>
        }
    </table>
    <label>Current Proficiencies: </label>@ViewBag.CharacterData.Proficiencies
    <br />
    <label>Change Proficiencies: </label>
    <br />
    @for (int i = 0; i < ViewBag.Classes["from"].Count; i++)
	{
		if (temp.Proficiencies.Contains($"{ViewBag.Classes["from"][i]["name"]}"))
		{
			<input type="checkbox" name="Proficiencies" value="@ViewBag.Classes["from"][i]["name"]" checked/>
        @ViewBag.Classes["from"][i]["name"]
        <br />
		}
		else
		{
        <input type="checkbox" name="Proficiencies" value="@ViewBag.Classes["from"][i]["name"]" />
        @ViewBag.Classes["from"][i]["name"]
        <br />
		}
	}
    @for (int i = 0; i < ViewBag.Pro.Count; i++)
    {
        <input type="hidden" name="Proficiencies" value="@ViewBag.Pro[i]["name"]" />
    }

    @for (int i = 0; i < ViewBag.Saves.Count; i++)
    {
        <input type="hidden" name="Proficiencies" value="@ViewBag.Saves[i]["name"]" />
    }
    <input type="submit" value="Save Changes" />
</form>
<br />
<br />
<br />

